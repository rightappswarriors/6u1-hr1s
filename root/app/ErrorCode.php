<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Session;
use DB;
use Storage;

class ErrorCode extends Model
{
    public static function Generate($AppType, $ControllerName, $num, $errorMsg)
    {
    	/*
    	|--------------------------------------------------------------------------
    	| How to use
    	|--------------------------------------------------------------------------
        | Add "use ErrorCode;" on controller/model/middleware when calling this
        | function above the class name of the controller/model/middleware.
        |
        | Check on ec.php page for respective class error prefix.
        | If you want to add another class prefix, just add another array with the
        | name of the array on ec.php. Otherwise your error code won't have a prefix.
        |
        | Copy and past the line below. This function is effectively used on try-catch
        | methods because you can easily retrieve the error message generated by the
        | framework(laravel) and use it as message ('msg' is used below).
        |
        | *-COPY STARTS HERE-*
        | ErrorCode::Generate(type, class_name, '00000'/Any Code Format, msg)
        | *-COPY ENDS HERE-*
        |
        | IMPORTANT NOTE: It won't automatically increment the error number you put
        | on the parameter, so be sure to change it.
        |
        | File is located at root/storage/logs/system/errorlog.txt
    	|
    	|--------------------------------------------------------------------------
    	*/
    	$errorCode = config('ec.'.$AppType.'.'.$ControllerName).$num;
    	if (self::SaveErrorLog($ControllerName, $errorMsg." (".$errorCode.")")!="ok") {
    		return self::SaveErrorLog($ControllerName, $errorMsg." (".$errorCode.")");
    	}
    	return ['app_type' => $AppType, 'error_code' => $errorCode];
    }


    // Update System Logs
    public static function SaveErrorLog($module, $action)
    {
        try {
            $date_time = date('m-d-Y')." ".date('H:i');
            $file = storage_path('logs\errorlog.txt');

    		if(file_exists($file)) {
    			$file = fopen($file,"a");
                $next_line = PHP_EOL;
    		}
    		else {
                $file = fopen($file,"w");
                $next_line = "";
    		}

			fwrite($file,$next_line.$date_time." | ".$module." | ".str_replace("\n", " ", $action));
			fclose($file);

			$msg = 'ok';
			return $msg;
    	} catch (\Exception $e) {
    		$msg = $e->getMessage();
    		return $msg;
    	}
    }
}
